import { Card, CardContent, CardHeader } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { MapPin, Shield, AlertTriangle, Bug, Code, Database } from "lucide-react";
import type { Vulnerability } from "@shared/schema";

interface VulnerabilityDetailsProps {
  vulnerabilities: Vulnerability[];
}

const severityConfig = {
  critical: { icon: AlertTriangle, className: "text-critical bg-red-100 dark:bg-red-900" },
  high: { icon: AlertTriangle, className: "text-red-600 bg-red-100 dark:bg-red-900" },
  medium: { icon: Bug, className: "text-warning bg-yellow-100 dark:bg-yellow-900" },
  low: { icon: Code, className: "text-blue-600 bg-blue-100 dark:bg-blue-900" },
};

export default function VulnerabilityDetails({ vulnerabilities }: VulnerabilityDetailsProps) {
  const criticalVulns = vulnerabilities.filter(v => v.severity === "critical" || v.severity === "high");

  if (vulnerabilities.length === 0) {
    return (
      <Card className="bg-white dark:bg-gray-800">
        <CardContent className="p-6">
          <div className="text-center py-8">
            <Shield className="mx-auto h-12 w-12 text-green-500 mb-4" />
            <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-2">
              No Critical Vulnerabilities Found
            </h3>
            <p className="text-gray-600 dark:text-gray-400">
              The APK analysis completed successfully with no critical security issues detected.
            </p>
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="bg-white dark:bg-gray-800">
      <CardHeader>
        <div className="flex items-center space-x-2">
          <AlertTriangle className="h-6 w-6 text-red-600" />
          <h2 className="text-xl font-bold text-gray-800 dark:text-gray-200">
            Security Issues Found
          </h2>
        </div>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {criticalVulns.map((vulnerability) => {
            const SeverityIcon = severityConfig[vulnerability.severity].icon;
            
            return (
              <div
                key={vulnerability.id}
                className="border border-red-200 dark:border-red-800 rounded-lg p-4 bg-red-50 dark:bg-red-900/20"
              >
                <div className="flex justify-between items-start mb-2">
                  <h3 className="font-semibold text-red-800 dark:text-red-200">
                    {vulnerability.title}
                  </h3>
                  <Badge className={`text-xs px-2 py-1 rounded-full font-medium ${severityConfig[vulnerability.severity].className}`}>
                    {vulnerability.severity.toUpperCase()}
                  </Badge>
                </div>
                
                <p className="text-red-700 dark:text-red-300 text-sm mb-3">
                  {vulnerability.description}
                </p>
                
                <div className="flex items-center space-x-4 text-sm">
                  <div className="flex items-center space-x-1 text-red-600 dark:text-red-400">
                    <MapPin className="h-4 w-4" />
                    <span>{vulnerability.location}</span>
                  </div>
                  
                  {vulnerability.cvssScore && (
                    <div className="flex items-center space-x-1 text-red-600 dark:text-red-400">
                      <Shield className="h-4 w-4" />
                      <span>CVSS: {vulnerability.cvssScore}</span>
                    </div>
                  )}
                  
                  <Badge variant="outline" className="text-xs">
                    {vulnerability.category}
                  </Badge>
                </div>
                
                {vulnerability.recommendation && (
                  <>
                    <Separator className="my-3" />
                    <div className="bg-blue-50 dark:bg-blue-900/20 p-3 rounded-md">
                      <h4 className="font-medium text-blue-800 dark:text-blue-200 mb-1">
                        Recommendation
                      </h4>
                      <p className="text-sm text-blue-700 dark:text-blue-300">
                        {vulnerability.recommendation}
                      </p>
                    </div>
                  </>
                )}
              </div>
            );
          })}
        </div>
      </CardContent>
    </Card>
  );
}
